/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Controllers.NewEmployee;
import Controllers.NewUsers;
import static Frames.PrincipalBackyard.desktopPane;
import Pojo.Employee;
import Pojo.Users;
import Utils.Language;
import com.sun.rowset.internal.Row;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Evander R
 */
public class FrameListUser extends javax.swing.JInternalFrame {

    NewUsers newUser = new NewUsers();
    NewEmployee newEmployee = new NewEmployee();
    String[] arrayType = new String[]{"Recepcionista", "Supervisor", "Gerente"};
    int origin = 0;
    int selection = 0;
    DefaultTableModel model;
    /**
     * Creates new form FrameListUser
     */
    public FrameListUser() {
        initComponents();
        loadData();
        origin = 0;
        setLenguage();
    }

    public void loadData() {
        model= (DefaultTableModel) this.jTable1.getModel();
        newUser.findAll().forEach(u -> {
            Employee e = newEmployee.findEmployeeByUser(u.getUserName());
            model.addRow(new Object[]{e.getFirstName() + " " + e.getSurname(), u.getUserName(), arrayType[e.getTypeEmployee()]});
        });
    }
    public void setLenguage(){
         try {
            Language l = new Language();
            FrameListUser.this.setTitle(l.getFrameListUserTitulo());
            this.jlabelTipodeBusqueda.setText(l.getLabelTipodeBusqueda()); 
             JTableHeader th = jTable1.getTableHeader();
             TableColumnModel tcm = th.getColumnModel();
             TableColumn tc = tcm.getColumn(0);
             tc.setHeaderValue(l.getColumnTrabajador());
              TableColumn tc1 = tcm.getColumn(1);
             tc1.setHeaderValue(l.getColumnUsuario());
              TableColumn tc2 = tcm.getColumn(2);
             tc2.setHeaderValue(l.getColumnTipo());
        } catch (IOException ex) {
            Logger.getLogger(PrincipalBackyard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jlabelTipodeBusqueda = new javax.swing.JLabel();
        textOption = new javax.swing.JComboBox<>();
        textBusqueda = new javax.swing.JTextField();
        buttonAddRefresh = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/icon32x32/users.png"))); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jlabelTipodeBusqueda.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jlabelTipodeBusqueda.setText("Tipo de Busqueda:");

        textOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Usuario", "Trabajador" }));
        textOption.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                textOptionItemStateChanged(evt);
            }
        });

        textBusqueda.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                textBusquedaInputMethodTextChanged(evt);
            }
        });
        textBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textBusquedaKeyTyped(evt);
            }
        });

        buttonAddRefresh.setBackground(new java.awt.Color(255, 255, 255));
        buttonAddRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon32x32/add.png"))); // NOI18N
        buttonAddRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddRefreshActionPerformed(evt);
            }
        });

        buttonDelete.setBackground(new java.awt.Color(255, 255, 255));
        buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon32x32/delete.png"))); // NOI18N
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonCancel.setBackground(new java.awt.Color(255, 255, 255));
        buttonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon32x32/cancel2.png"))); // NOI18N
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Trabajador", "Usuario", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionBackground(new java.awt.Color(255, 153, 0));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonAddRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jlabelTipodeBusqueda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textOption, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabelTipodeBusqueda)
                    .addComponent(textOption, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonDelete)
                    .addComponent(buttonAddRefresh, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonCancel))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddRefreshActionPerformed
        try {
            Language l = new Language();
            switch (origin) {
                case 0:
                    FrameUsuario fce = new FrameUsuario();
                    desktopPane.add(fce);
                    Dimension desktopSize = desktopPane.getSize();
                    Dimension FrameSize = fce.getSize();
                    fce.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
                    fce.toFront();
                    fce.show();
                    break;
                case 1:
                    Users u = newUser.findByUserName(this.jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1).toString());
                    FrameUsuario fce1 = new FrameUsuario(u);
                    desktopPane.add(fce1);
                    Dimension desktopSize1 = desktopPane.getSize();
                    Dimension FrameSize1 = fce1.getSize();
                    fce1.setLocation((desktopSize1.width - FrameSize1.width) / 2, (desktopSize1.height - FrameSize1.height) / 2);
                    fce1.toFront();
                    jTable1.clearSelection();
                    JOptionPane.showMessageDialog(null, l.getDigiteContraseña() , l.getAlerta(), JOptionPane.INFORMATION_MESSAGE);
                    fce1.show();
                    break;
            }
            this.dispose();
        } catch (IOException ex) {
            Logger.getLogger(FrameListUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonAddRefreshActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        buttonAddRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon32x32/refresh.png")));
        origin = 1;
    }//GEN-LAST:event_jTable1MouseClicked

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        cancel();
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        try {
            Language l = new Language();
            DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
            if (this.jTable1.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(null, l.getfilanoafectada(), l.getError(), JOptionPane.ERROR);
            } else {
                Users u = newUser.findByUserName(model.getValueAt(jTable1.getSelectedRow(), 1).toString());
                newUser.save(u, 2);
                model.removeRow(this.jTable1.getSelectedRow());
                cancel();
                JOptionPane.showMessageDialog(null, l.getELIMINADO(), l.getEXITO(), JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (IOException ex) {
            Logger.getLogger(FrameListUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void textBusquedaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_textBusquedaInputMethodTextChanged
        System.out.println("probando");
    }//GEN-LAST:event_textBusquedaInputMethodTextChanged

    private void textBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBusquedaKeyTyped
        jTable1.removeAll();
        switch (selection) {
            case 0:
                List<Users> users = newUser.findByUserNameLike(this.textBusqueda.getText());
                if (users != null) {
                    users.forEach(u -> {
                        Employee e = newEmployee.findEmployeeByUser(u.getUserName());
                        model.addRow(new Object[]{e.getFirstName() + " " + e.getSurname(), u.getUserName(), arrayType[e.getTypeEmployee()]});
                    });
                }
                break;
            case 1:
                break;

        }
    }//GEN-LAST:event_textBusquedaKeyTyped

    private void textOptionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_textOptionItemStateChanged
        switch (this.textOption.getSelectedIndex()) {
            case 0:
                selection = 0;
                break;
            case 1:
                selection = 1;
                break;

        }
    }//GEN-LAST:event_textOptionItemStateChanged

    public void cancel() {
        buttonAddRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon32x32/add.png")));
        origin = 0;
        jTable1.clearSelection();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddRefresh;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    private javax.swing.JLabel jlabelTipodeBusqueda;
    private javax.swing.JTextField textBusqueda;
    private javax.swing.JComboBox<String> textOption;
    // End of variables declaration//GEN-END:variables
}
